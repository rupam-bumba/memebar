{"ast":null,"code":"var _jsxFileName = \"/home/rupambumba/Documents/memebar/client/src/components/home/Feed.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Cards from \"./Cards\";\nimport axios from \"axios\";\nimport { json } from \"body-parser\";\nexport default function Feed() {\n  const [FetchResult, setFetchResult] = useState();\n  useEffect(() => {\n    console.log(\"| 55 Debug |  use Effect reload\");\n    axios({\n      // `url` is the server URL that will be used for the request\n      url: \"/api/post/fetch\",\n      // `method` is the request method to be used when making the request\n      method: \"post\",\n      // default\n      // `baseURL` will be prepended to `url` unless `url` is absolute.\n      baseURL: \"http://localhost:5000\",\n      // `headers` are custom headers to be sent\n      headers: {\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      },\n      // `data` is the data to be sent as the request body\n      data: {}\n    }).then(result => {\n      console.log(\"| 74 Debug |\" + JSON.stringify(result.data.result));\n      let obj = result.data.result;\n      console.log(obj);\n      let arr = [];\n\n      for (let i in obj) {\n        arr.push(obj[i]);\n        console.log(i + \"=  =\" + arr[i]);\n      }\n\n      setFetchResult(arr);\n    }).catch(error => {\n      console.log(\"| 77 Debug |\" + JSON.stringify(error));\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, JSON.stringify(FetchResult), React.createElement(Cards, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Cards, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Cards, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/rupambumba/Documents/memebar/client/src/components/home/Feed.js"],"names":["React","useState","useEffect","Cards","axios","json","Feed","FetchResult","setFetchResult","console","log","url","method","baseURL","headers","data","then","result","JSON","stringify","obj","arr","i","push","catch","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,aAArB;AAIA,eAAe,SAASC,IAAT,GAAgB;AAE7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,EAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AAEAN,IAAAA,KAAK,CAAC;AACJ;AACAO,MAAAA,GAAG,EAAE,iBAFD;AAIJ;AACAC,MAAAA,MAAM,EAAE,MALJ;AAKY;AAEhB;AACAC,MAAAA,OAAO,EAAE,uBARL;AAUJ;AACAC,MAAAA,OAAO,EAAE;AAAE,4BAAoB;AAAtB,OAXL;AAaJ;AACAC,MAAAA,IAAI,EAAE;AAdF,KAAD,CAAL,CAgBGC,IAhBH,CAgBSC,MAAD,IAAY;AAChBR,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBQ,IAAI,CAACC,SAAL,CAAeF,MAAM,CAACF,IAAP,CAAYE,MAA3B,CAA7B;AACA,UAAIG,GAAG,GAAGH,MAAM,CAACF,IAAP,CAAYE,MAAtB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACA,UAAIC,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIC,CAAT,IAAcF,GAAd,EAAmB;AACjBC,QAAAA,GAAG,CAACE,IAAJ,CAASH,GAAG,CAACE,CAAD,CAAZ;AACAb,QAAAA,OAAO,CAACC,GAAR,CAAYY,CAAC,GAAG,MAAJ,GAAaD,GAAG,CAACC,CAAD,CAA5B;AACD;;AAEDd,MAAAA,cAAc,CAACa,GAAD,CAAd;AACD,KA3BH,EA4BGG,KA5BH,CA4BUC,KAAD,IAAW;AAChBhB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBQ,IAAI,CAACC,SAAL,CAAeM,KAAf,CAA7B;AACD,KA9BH;AA+BD,GAlCQ,EAkCN,EAlCM,CAAT;AAoCA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IAAI,CAACC,SAAL,CAAeZ,WAAf,CADH,EAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAFF;AAWD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Cards from \"./Cards\"\nimport axios from \"axios\";\nimport { json } from \"body-parser\";\n\n\n\nexport default function Feed() {\n\n  const [FetchResult, setFetchResult] = useState();\n\n  useEffect(() => {\n    console.log(\"| 55 Debug |  use Effect reload\");\n\n    axios({\n      // `url` is the server URL that will be used for the request\n      url: \"/api/post/fetch\",\n\n      // `method` is the request method to be used when making the request\n      method: \"post\", // default\n\n      // `baseURL` will be prepended to `url` unless `url` is absolute.\n      baseURL: \"http://localhost:5000\",\n\n      // `headers` are custom headers to be sent\n      headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n\n      // `data` is the data to be sent as the request body\n      data: {},\n    })\n      .then((result) => {\n        console.log(\"| 74 Debug |\" + JSON.stringify(result.data.result));\n        let obj = result.data.result;\n        console.log(obj);\n        let arr = [];\n        for (let i in obj) {\n          arr.push(obj[i]);\n          console.log(i + \"=  =\" + arr[i]);\n        }\n\n        setFetchResult(arr);\n      })\n      .catch((error) => {\n        console.log(\"| 77 Debug |\" + JSON.stringify(error));\n      });\n  }, []);\n\n  return (\n\n    <div>\n      {JSON.stringify(FetchResult)}\n      {}\n      <Cards/>\n      <Cards/>\n      <Cards/>\n    </div>\n   \n  );\n}\n"]},"metadata":{},"sourceType":"module"}