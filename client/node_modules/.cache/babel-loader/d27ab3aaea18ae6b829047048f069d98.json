{"ast":null,"code":"var _jsxFileName = \"/home/rupambumba/Documents/memebar/client/src/components/home/Feed.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport axios from \"axios\";\nimport { json } from \"body-parser\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: \"100%\"\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\nexport default function Feed() {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n  const [FetchResult, setFetchResult] = useState();\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  useEffect(() => {\n    console.log(\"| 55 Debug |  use Effect reload\");\n    axios({\n      // `url` is the server URL that will be used for the request\n      url: \"/api/post/fetch\",\n      // `method` is the request method to be used when making the request\n      method: \"post\",\n      // default\n      // `baseURL` will be prepended to `url` unless `url` is absolute.\n      baseURL: \"http://localhost:5000\",\n      // `headers` are custom headers to be sent\n      headers: {\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      },\n      // `data` is the data to be sent as the request body\n      data: {}\n    }).then(result => {\n      console.log(\"| 74 Debug |\" + JSON.stringify(result.data.result));\n      let obj = result.data.result;\n      console.log(obj);\n      let arr = [];\n\n      for (let i in obj) {\n        arr.push(obj[i]);\n        console.log(i + \"=  =\" + arr[i]);\n      }\n\n      setFetchResult(arr);\n    }).catch(error => {\n      console.log(\"| 77 Debug |\" + JSON.stringify(error));\n    });\n  }, []);\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/home/rupambumba/Documents/memebar/client/src/components/home/Feed.js"],"names":["React","useState","useEffect","makeStyles","clsx","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","Avatar","IconButton","Typography","red","FavoriteIcon","ShareIcon","ExpandMoreIcon","MoreVertIcon","axios","json","useStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","Feed","classes","expanded","setExpanded","FetchResult","setFetchResult","handleExpandClick","console","log","url","method","baseURL","headers","data","then","result","JSON","stringify","obj","arr","i","push","catch","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport axios from \"axios\";\nimport { json } from \"body-parser\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: \"100%\",\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function Feed() {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n\n  const [FetchResult, setFetchResult] = useState();\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  useEffect(() => {\n    console.log(\"| 55 Debug |  use Effect reload\");\n\n    axios({\n      // `url` is the server URL that will be used for the request\n      url: \"/api/post/fetch\",\n\n      // `method` is the request method to be used when making the request\n      method: \"post\", // default\n\n      // `baseURL` will be prepended to `url` unless `url` is absolute.\n      baseURL: \"http://localhost:5000\",\n\n      // `headers` are custom headers to be sent\n      headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n\n      // `data` is the data to be sent as the request body\n      data: {},\n    })\n      .then((result) => {\n        console.log(\"| 74 Debug |\" + JSON.stringify(result.data.result));\n        let obj = result.data.result;\n        console.log(obj);\n        let arr = [];\n        for (let i in obj) {\n          arr.push(obj[i]);\n          console.log(i + \"=  =\" + arr[i]);\n        }\n\n        setFetchResult(arr);\n      })\n      .catch((error) => {\n        console.log(\"| 77 Debug |\" + JSON.stringify(error));\n      });\n  }, []);\n\n  return (\n    <Card>\n      \n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}