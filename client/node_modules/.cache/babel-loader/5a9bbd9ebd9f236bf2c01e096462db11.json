{"ast":null,"code":"var _jsxFileName = \"/home/rupambumba/Documents/memebar/client/src/components/home/Post.js\";\nimport React, { useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: \"100%\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {},\n  input: {\n    display: \"none\" // not show HTML input  icon\n\n  }\n}));\nexport default function InputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    postImageFileName: \"\",\n    enctype: \"multipart/form-data\",\n    _user_id: \"\",\n    text: \"\",\n    link: \"\",\n    file: \"\"\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.values\n    });\n    console.log(\" | 51 Debug values| \" + JSON.stringify(values));\n  };\n\n  const handleChangeFile = prop => event => {\n    console.log(\" | 57 Debug event.target.file | \" + event.target.files);\n    setValues({ ...values,\n      [prop]: event.target.files\n    });\n    console.log(\" | 57 Debug values| \" + JSON.stringify(values));\n  };\n\n  const handelsubmit = event => {\n    event.preventDefault();\n  };\n\n  const formData = new FormData(); // Currently empty\n\n  formData.append(\"url\", \"/api/post/upload\");\n  formData.append(\"method\", \"post\");\n  formData.append(\"baseURL\", \"http://localhost:5000\");\n  formData.append(\"headers\", {\n    \"X-Requested-With\": \"XMLHttpRequest\"\n  });\n  formData.append(\"data\", {\n    enctype: \"multipart/form-data\",\n    text: \"sassqwaasa\",\n    _user_id: \"asas\"\n  });\n  var data = {\n    // `url` is the server URL that will be used for the request\n    url: \"/api/post/upload\",\n    // `method` is the request method to be used when making the request\n    method: \"post\",\n    // default\n    // `baseURL` will be prepended to `url` unless `url` is absolute.\n    baseURL: \"http://localhost:5000\",\n    // `headers` are custom headers to be sent\n    headers: {\n      \"X-Requested-With\": \"XMLHttpRequest\"\n    },\n    // `data` is the data to be sent as the request body\n    data: {\n      values: values.text\n    }\n  };\n  useEffect(() => {\n    console.log(\"| 66 Debug  |  use Effect reload\");\n    console.log(\"| 66 Debug  |  \" + JSON.stringify(formData));\n    axios(formData).then(result => {\n      console.log(\"| 87 Debug   JSON.stringify(result) |\" + JSON.stringify(result));\n    }).catch(errors => {\n      console.log(\"| 91 Debug JSON.stringify(errors) |\" + JSON.stringify(errors));\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handelsubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: clsx(classes.margin, classes.textField),\n    variant: \"outlined\",\n    style: {\n      width: \"97%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"text\",\n    placeholder: \"Wellcome To Memebar\",\n    type: \"textarea\",\n    multiline: true,\n    fullWidth: true,\n    rows: 2,\n    variant: \"outlined\",\n    style: {\n      width: \"100%\"\n    },\n    onChange: handleChange(\"text\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    style: {\n      background: \"\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: clsx(classes.margin, classes.textField),\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"contained-button-file\",\n    accept: \"image/*\",\n    className: classes.input //multiple\n    ,\n    type: \"file\",\n    onChange: handleChangeFile(\"file\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    component: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Upload\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \" Choose a File \")))), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    style: {\n      background: \"\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    style: {\n      background: \"\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: clsx(classes.margin, classes.textField),\n    variant: \"outlined\",\n    style: {\n      width: \"85%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"post\")))))))));\n}","map":{"version":3,"sources":["/home/rupambumba/Documents/memebar/client/src/components/home/Post.js"],"names":["React","useEffect","useState","clsx","makeStyles","IconButton","Input","FilledInput","OutlinedInput","InputLabel","InputAdornment","FormHelperText","FormControl","TextField","Visibility","VisibilityOff","Card","CardActions","CardContent","Button","Typography","Grid","axios","useStyles","theme","root","maxWidth","margin","spacing","withoutLabel","marginTop","textField","input","display","InputAdornments","classes","values","setValues","postImageFileName","enctype","_user_id","text","link","file","handleChange","prop","event","target","console","log","JSON","stringify","handleChangeFile","files","handelsubmit","preventDefault","formData","FormData","append","data","url","method","baseURL","headers","then","result","catch","errors","width","background"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAGnB,UAAU,CAAEoB,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADiC;AAIvCC,EAAAA,MAAM,EAAE;AACNA,IAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADF,GAJ+B;AAOvCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAEN,KAAK,CAACI,OAAN,CAAc,CAAd;AADC,GAPyB;AAUvCG,EAAAA,SAAS,EAAE,EAV4B;AAWvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ,CACY;;AADZ;AAXgC,CAAZ,CAAD,CAA5B;AAqBA,eAAe,SAASC,eAAT,GAA2B;AACxC,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAuBnC,QAAQ,CAAC;AACpCoC,IAAAA,iBAAiB,EAAE,EADiB;AAEpCC,IAAAA,OAAO,EAAE,qBAF2B;AAGpCC,IAAAA,QAAQ,EAAE,EAH0B;AAIpCC,IAAAA,IAAI,EAAE,EAJ8B;AAKpCC,IAAAA,IAAI,EAAE,EAL8B;AAMpCC,IAAAA,IAAI,EAAE;AAN8B,GAAD,CAArC;;AAaA,QAAMC,YAAY,GAAIC,IAAD,IAAWC,KAAD,IAAW;AACxCT,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACS,IAAD,GAAQC,KAAK,CAACC,MAAN,CAAaX;AAAlC,KAAD,CAAT;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBC,IAAI,CAACC,SAAL,CAAef,MAAf,CAArC;AACD,GAHD;;AAUA,QAAMgB,gBAAgB,GAAIP,IAAD,IAAWC,KAAD,IAAW;AAC5CE,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAqCH,KAAK,CAACC,MAAN,CAAaM,KAA9D;AAEAhB,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACS,IAAD,GAAQC,KAAK,CAACC,MAAN,CAAaM;AAAlC,KAAD,CAAT;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBC,IAAI,CAACC,SAAL,CAAef,MAAf,CAArC;AACD,GALD;;AAWA,QAAMkB,YAAY,GAAIR,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACS,cAAN;AAED,GAHD;;AAOA,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CA3CwC,CA2CP;;AAEjCD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuB,kBAAvB;AACAF,EAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0B,MAA1B;AACAF,EAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,uBAA3B;AACAF,EAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B;AAAE,wBAAoB;AAAtB,GAA3B;AACAF,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB;AAACnB,IAAAA,OAAO,EAAE,qBAAV;AAAgCE,IAAAA,IAAI,EAAE,YAAtC;AAAmDD,IAAAA,QAAQ,EAAE;AAA7D,GAAxB;AAKA,MAAImB,IAAI,GAAG;AACT;AACAC,IAAAA,GAAG,EAAE,kBAFI;AAIT;AACAC,IAAAA,MAAM,EAAE,MALC;AAKO;AAEhB;AACAC,IAAAA,OAAO,EAAE,uBARA;AAUT;AACAC,IAAAA,OAAO,EAAE;AAAE,0BAAoB;AAAtB,KAXA;AAaT;AACAJ,IAAAA,IAAI,EAAE;AACJvB,MAAAA,MAAM,EAAGA,MAAM,CAACK;AADZ;AAdG,GAAX;AAqBAxC,EAAAA,SAAS,CAAC,MAAM;AACd+C,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBC,IAAI,CAACC,SAAL,CAAeK,QAAf,CAAhC;AAMAlC,IAAAA,KAAK,CAACkC,QAAD,CAAL,CACGQ,IADH,CACSC,MAAD,IAAW;AACfjB,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAA0CC,IAAI,CAACC,SAAL,CAAec,MAAf,CAAtD;AAED,KAJH,EAKGC,KALH,CAKUC,MAAD,IAAW;AAChBnB,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAwCC,IAAI,CAACC,SAAL,CAAegB,MAAf,CAApD;AAED,KARH;AASD,GAjBQ,EAiBN,EAjBM,CAAT;AA0BA,SACE;AAAK,IAAA,SAAS,EAAEhC,OAAO,CAACV,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAE6B,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEnB,OAAO,CAACV,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAEtB,IAAI,CAACgC,OAAO,CAACR,MAAT,EAAiBQ,OAAO,CAACJ,SAAzB,CADjB;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,KAAK,EAAE;AAAEqC,MAAAA,KAAK,EAAE;AAAT,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,WAAW,EAAC,qBAFd;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,SAAS,MALX;AAME,IAAA,IAAI,EAAE,CANR;AAOE,IAAA,OAAO,EAAC,UAPV;AAQE,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT,KART;AASE,IAAA,QAAQ,EAAExB,YAAY,CAAC,MAAD,CATxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,KAAK,EAAE;AAAEyB,MAAAA,UAAU,EAAE;AAAd,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAElE,IAAI,CAACgC,OAAO,CAACR,MAAT,EAAiBQ,OAAO,CAACJ,SAAzB,CADjB;AAEE,IAAA,OAAO,EAAC,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AACE,IAAA,EAAE,EAAC,uBADL;AAEE,IAAA,MAAM,EAAC,SAFT;AAGE,IAAA,SAAS,EAAEI,OAAO,CAACH,KAHrB,CAIE;AAJF;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,QAAQ,EAAEoB,gBAAgB,CAAC,MAAD,CAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAYE;AAAO,IAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,SAAS,EAAC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBARF,CAZF,CADF,CADF,EA2BE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,KAAK,EAAE;AAAEiB,MAAAA,UAAU,EAAE;AAAd,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,EA4BE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,KAAK,EAAE;AAAEA,MAAAA,UAAU,EAAE;AAAd,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAElE,IAAI,CAACgC,OAAO,CAACR,MAAT,EAAiBQ,OAAO,CAACJ,SAAzB,CADjB;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,KAAK,EAAE;AAAEqC,MAAAA,KAAK,EAAE;AAAT,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,CADF,CA5BF,CADF,CAnBF,CADF,CADF,CADF,CADF;AAsED","sourcesContent":["import React , {useEffect ,useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: \"100%\",\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {},\n  input: {\n    display: \"none\", // not show HTML input  icon\n  },\n}));\n\n\n\n\n\n\nexport default function InputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] =  useState({\n    postImageFileName: \"\",\n    enctype: \"multipart/form-data\",\n    _user_id: \"\",\n    text: \"\",\n    link: \"\",\n    file: \"\",\n  });\n\n\n\n\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.values });\n    console.log(\" | 51 Debug values| \" + JSON.stringify(values));\n  };\n\n\n\n\n\n\n  const handleChangeFile = (prop) => (event) => {\n    console.log(\" | 57 Debug event.target.file | \" + event.target.files );\n\n    setValues({ ...values, [prop]: event.target.files });\n    console.log(\" | 57 Debug values| \" + JSON.stringify(values));\n  };\n\n\n\n\n\n  const handelsubmit = (event) => {\n    event.preventDefault();\n\n  };\n\n\n  \n  const formData = new FormData(); // Currently empty\n\n  formData.append(\"url\", \"/api/post/upload\")\n  formData.append(\"method\", \"post\")\n  formData.append(\"baseURL\", \"http://localhost:5000\")\n  formData.append(\"headers\", { \"X-Requested-With\": \"XMLHttpRequest\" })\n  formData.append(\"data\", {enctype: \"multipart/form-data\",text: \"sassqwaasa\",_user_id: \"asas\"})\n  \n\n  \n\n  var data = {\n    // `url` is the server URL that will be used for the request\n    url: \"/api/post/upload\",\n\n    // `method` is the request method to be used when making the request\n    method: \"post\", // default\n\n    // `baseURL` will be prepended to `url` unless `url` is absolute.\n    baseURL: \"http://localhost:5000\",\n\n    // `headers` are custom headers to be sent\n    headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n\n    // `data` is the data to be sent as the request body\n    data: {\n      values : values.text\n    }\n  }\n\n\n\n  useEffect(() => {\n    console.log(\"| 66 Debug  |  use Effect reload\" );\n    console.log(\"| 66 Debug  |  \"+  JSON.stringify(formData));\n\n\n\n \n\n    axios(formData)\n      .then((result) =>{\n        console.log(\"| 87 Debug   JSON.stringify(result) |\" + JSON.stringify(result));\n        \n      })\n      .catch((errors) =>{\n        console.log(\"| 91 Debug JSON.stringify(errors) |\" + JSON.stringify(errors));\n\n      });\n  }, []);\n\n\n\n\n\n\n  \n\n  return (\n    <div className={classes.root}>\n      <div>\n        <form onSubmit={handelsubmit}>\n          <Card className={classes.root}>\n            <FormControl\n              className={clsx(classes.margin, classes.textField)}\n              variant=\"outlined\"\n              style={{ width: \"97%\" }}\n            >\n              <TextField\n                id=\"text\"\n                placeholder=\"Wellcome To Memebar\"\n                type=\"textarea\"\n                multiline\n                fullWidth\n                rows={2}\n                variant=\"outlined\"\n                style={{ width: \"100%\" }}\n                onChange={handleChange(\"text\")}\n              />\n            </FormControl>\n\n            <div>\n              <Grid container spacing={0}>\n                <Grid item xs={6} style={{ background: \"\" }}>\n                  <FormControl\n                    className={clsx(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                  >\n                    <input\n                      id=\"contained-button-file\"\n                      accept=\"image/*\"\n                      className={classes.input}\n                      //multiple\n                      type=\"file\"\n                      onChange={handleChangeFile(\"file\")}\n                    />\n                    <label htmlFor=\"contained-button-file\">\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        component=\"span\"\n                      >\n                        Upload\n                      </Button>\n                      <span> Choose a File </span>\n                    </label>\n                  </FormControl>\n                </Grid>\n\n                <Grid item xs={3} style={{ background: \"\" }}></Grid>\n                <Grid item xs={3} style={{ background: \"\" }}>\n                  <FormControl\n                    className={clsx(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    style={{ width: \"85%\" }}\n                  >\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                      post\n                    </Button>\n                  </FormControl>\n                </Grid>\n              </Grid>\n            </div>\n          </Card>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}