{"ast":null,"code":"var _jsxFileName = \"/home/rupambumba/Documents/memebar/client/src/components/home/Post.js\";\nimport React, { useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: \"100%\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {},\n  input: {\n    display: \"none\" // not show HTML input  icon\n\n  }\n}));\nexport default function Post() {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    postImageFileName: \"\",\n    enctype: \"multipart/form-data\",\n    _user_id: \"\",\n    text: \"\",\n    postImageFileName: \"\"\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.values\n    });\n    console.log(\" | 51 Debug values| \" + JSON.stringify(values));\n  };\n\n  const handleChangeFile = prop => event => {\n    console.log(\" | 57 Debug event.target.file | \" + event.target.files);\n    setValues({ ...values,\n      [prop]: event.target.files\n    });\n    console.log(\" | 57 Debug values| \" + JSON.stringify(values));\n  };\n\n  const handelsubmit = event => {\n    event.preventDefault();\n  };\n\n  useEffect(() => {\n    console.log(\"| 66 Debug  |  use Effect reload\");\n    console.log(\"| 66 Debug  |  \" + JSON.stringify(formData));\n    console.log(\"| 66 Debug  |  \" + JSON.stringify(data));\n    const formData = new FormData(); // Currently empty\n\n    formData.append(\"enctype\", values.enctype);\n    formData.append(\"postImageFileName\", values.postImageFileName);\n    formData.append(\"text\", values.text);\n    formData.append(\"_user_id\", values._user_id);\n    var data = {\n      // `url` is the server URL that will be used for the request\n      url: \"/api/post/upload\",\n      // `method` is the request method to be used when making the request\n      method: \"post\",\n      // default\n      // `baseURL` will be prepended to `url` unless `url` is absolute.\n      baseURL: \"http://localhost:5000\",\n      // `headers` are custom headers to be sent\n      headers: {\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      },\n      // `data` is the data to be sent as the request body\n      data: formData\n    };\n    axios(data).then(result => {\n      console.log(\"| 87 Debug   JSON.stringify(result) |\" + JSON.stringify(result));\n    }).catch(errors => {\n      console.log(\"| 91 Debug JSON.stringify(errors) |\" + JSON.stringify(errors));\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handelsubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: clsx(classes.margin, classes.textField),\n    variant: \"outlined\",\n    style: {\n      width: \"97%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"text\",\n    placeholder: \"Wellcome To Memebar\",\n    type: \"textarea\",\n    multiline: true,\n    fullWidth: true,\n    rows: 2,\n    variant: \"outlined\",\n    style: {\n      width: \"100%\"\n    },\n    onChange: handleChange(\"text\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    style: {\n      background: \"\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: clsx(classes.margin, classes.textField),\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"contained-button-file\",\n    accept: \"image/*\",\n    className: classes.input //multiple\n    ,\n    type: \"file\",\n    onChange: handleChangeFile(\"file\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    component: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Upload\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \" Choose a File \")))), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    style: {\n      background: \"\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    style: {\n      background: \"\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: clsx(classes.margin, classes.textField),\n    variant: \"outlined\",\n    style: {\n      width: \"85%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"post\")))))))));\n}","map":{"version":3,"sources":["/home/rupambumba/Documents/memebar/client/src/components/home/Post.js"],"names":["React","useEffect","useState","clsx","makeStyles","IconButton","Input","FilledInput","OutlinedInput","InputLabel","InputAdornment","FormHelperText","FormControl","TextField","Visibility","VisibilityOff","Card","CardActions","CardContent","Button","Typography","Grid","axios","useStyles","theme","root","maxWidth","margin","spacing","withoutLabel","marginTop","textField","input","display","Post","classes","values","setValues","postImageFileName","enctype","_user_id","text","handleChange","prop","event","target","console","log","JSON","stringify","handleChangeFile","files","handelsubmit","preventDefault","formData","data","FormData","append","url","method","baseURL","headers","then","result","catch","errors","width","background"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport axios from \"axios\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: \"100%\",\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {},\n  input: {\n    display: \"none\", // not show HTML input  icon\n  },\n}));\n\nexport default function Post() {\n  \n  const classes = useStyles();\n  const [values, setValues] = useState({\n    postImageFileName: \"\",\n    enctype: \"multipart/form-data\",\n    _user_id: \"\",\n    text: \"\",\n    postImageFileName: \"\",\n  });\n\n  \n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.values });\n    console.log(\" | 51 Debug values| \" + JSON.stringify(values));\n  };\n\n  const handleChangeFile = (prop) => (event) => {\n    console.log(\" | 57 Debug event.target.file | \" + event.target.files);\n\n    setValues({ ...values, [prop]: event.target.files });\n    console.log(\" | 57 Debug values| \" + JSON.stringify(values));\n  };\n\n  const handelsubmit = (event) => {\n    event.preventDefault();\n\n  };\n\n\n\n\n\n\n\n\n\n  useEffect(() => {\n    console.log(\"| 66 Debug  |  use Effect reload\");\n    console.log(\"| 66 Debug  |  \" + JSON.stringify(formData));\n    console.log(\"| 66 Debug  |  \" + JSON.stringify(data));\n\n    const formData = new FormData(); // Currently empty\n\n    formData.append(\"enctype\",values.enctype );\n    formData.append(\"postImageFileName\",values.postImageFileName );\n    formData.append(\"text\", values.text );\n    formData.append(\"_user_id\", values._user_id );\n\n    var data = {\n      // `url` is the server URL that will be used for the request\n      url: \"/api/post/upload\",\n  \n      // `method` is the request method to be used when making the request\n      method: \"post\", // default\n  \n      // `baseURL` will be prepended to `url` unless `url` is absolute.\n      baseURL: \"http://localhost:5000\",\n  \n      // `headers` are custom headers to be sent\n      headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n  \n      // `data` is the data to be sent as the request body\n      data:formData\n    };\n\n    \n    axios(data)\n      .then((result) => {\n        console.log(\n          \"| 87 Debug   JSON.stringify(result) |\" + JSON.stringify(result)\n        );\n      })\n      .catch((errors) => {\n        console.log(\n          \"| 91 Debug JSON.stringify(errors) |\" + JSON.stringify(errors)\n        );\n      });\n\n\n\n  } ,[]);\n\n\n\n \n  return (\n    <div className={classes.root}>\n      <div>\n        <form onSubmit={handelsubmit}>\n          <Card className={classes.root}>\n            <FormControl\n              className={clsx(classes.margin, classes.textField)}\n              variant=\"outlined\"\n              style={{ width: \"97%\" }}\n            >\n              <TextField\n                id=\"text\"\n                placeholder=\"Wellcome To Memebar\"\n                type=\"textarea\"\n                multiline\n                fullWidth\n                rows={2}\n                variant=\"outlined\"\n                style={{ width: \"100%\" }}\n                onChange={handleChange(\"text\")}\n              />\n            </FormControl>\n\n            <div>\n              <Grid container spacing={0}>\n                <Grid item xs={6} style={{ background: \"\" }}>\n                  <FormControl\n                    className={clsx(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                  >\n                    <input\n                      id=\"contained-button-file\"\n                      accept=\"image/*\"\n                      className={classes.input}\n                      //multiple\n                      type=\"file\"\n                      onChange={handleChangeFile(\"file\")}\n                    />\n                    <label htmlFor=\"contained-button-file\">\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        component=\"span\"\n                      >\n                        Upload\n                      </Button>\n                      <span> Choose a File </span>\n                    </label>\n                  </FormControl>\n                </Grid>\n\n                <Grid item xs={3} style={{ background: \"\" }}></Grid>\n                <Grid item xs={3} style={{ background: \"\" }}>\n                  <FormControl\n                    className={clsx(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    style={{ width: \"85%\" }}\n                  >\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                      post\n                    </Button>\n                  </FormControl>\n                </Grid>\n              </Grid>\n            </div>\n          </Card>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}