{"ast":null,"code":"var _jsxFileName = \"/home/rupambumba/Documents/memebar/client/src/components/users/Singup.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nexport default function Singup() {\n  const [name, setName] = React.useState('Composed TextField');\n  const classes = useStyles();\n\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n\n  return React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Input, {\n    id: \"component-simple\",\n    value: name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-helper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Input, {\n    id: \"component-helper\",\n    value: name,\n    onChange: handleChange,\n    \"aria-describedby\": \"component-helper-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"component-helper-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Some important helper text\")), React.createElement(FormControl, {\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-disabled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Input, {\n    id: \"component-disabled\",\n    value: name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Disabled\")), React.createElement(FormControl, {\n    error: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Input, {\n    id: \"component-error\",\n    value: name,\n    onChange: handleChange,\n    \"aria-describedby\": \"component-error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"component-error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Error\")), React.createElement(FormControl, {\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Name\"), React.createElement(OutlinedInput, {\n    id: \"component-outlined\",\n    value: name,\n    onChange: handleChange,\n    label: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    variant: \"filled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-filled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Name\"), React.createElement(FilledInput, {\n    id: \"component-filled\",\n    value: name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/rupambumba/Documents/memebar/client/src/components/users/Singup.js"],"names":["React","makeStyles","FilledInput","FormControl","FormHelperText","Input","InputLabel","OutlinedInput","useStyles","theme","root","margin","spacing","Singup","name","setName","useState","classes","handleChange","event","target","value"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function Singup() {\n  const [name, setName] = React.useState('Composed TextField');\n  const classes = useStyles();\n\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <FormControl>\n        <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\n        <Input id=\"component-simple\" value={name} onChange={handleChange} />\n      </FormControl>\n      <FormControl>\n        <InputLabel htmlFor=\"component-helper\">Name</InputLabel>\n        <Input\n          id=\"component-helper\"\n          value={name}\n          onChange={handleChange}\n          aria-describedby=\"component-helper-text\"\n        />\n        <FormHelperText id=\"component-helper-text\">Some important helper text</FormHelperText>\n      </FormControl>\n      <FormControl disabled>\n        <InputLabel htmlFor=\"component-disabled\">Name</InputLabel>\n        <Input id=\"component-disabled\" value={name} onChange={handleChange} />\n        <FormHelperText>Disabled</FormHelperText>\n      </FormControl>\n      <FormControl error>\n        <InputLabel htmlFor=\"component-error\">Name</InputLabel>\n        <Input\n          id=\"component-error\"\n          value={name}\n          onChange={handleChange}\n          aria-describedby=\"component-error-text\"\n        />\n        <FormHelperText id=\"component-error-text\">Error</FormHelperText>\n      </FormControl>\n      <FormControl variant=\"outlined\">\n        <InputLabel htmlFor=\"component-outlined\">Name</InputLabel>\n        <OutlinedInput id=\"component-outlined\" value={name} onChange={handleChange} label=\"Name\" />\n      </FormControl>\n      <FormControl variant=\"filled\">\n        <InputLabel htmlFor=\"component-filled\">Name</InputLabel>\n        <FilledInput id=\"component-filled\" value={name} onChange={handleChange} />\n      </FormControl>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}