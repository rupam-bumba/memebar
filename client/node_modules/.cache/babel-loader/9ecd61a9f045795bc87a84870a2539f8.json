{"ast":null,"code":"var _jsxFileName = \"/home/rupambumba/Documents/memebar/client/src/components/home/Feed.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Cards from \"./Cards\";\nimport axios from \"axios\";\nimport { json } from \"body-parser\";\nimport { GrobalContex } from \"../../context/GlobalContex\";\nexport default function Feed() {\n  const [FetchResult, setFetchResult] = useState();\n  const [GlobalContexValue, setGlobalContexValue] = useContext(GrobalContex);\n  useEffect(() => {\n    console.log(\"| 55 Debug |  use Effect reload\");\n    axios({\n      // `url` is the server URL that will be used for the request\n      url: GlobalContexValue,\n      // `method` is the request method to be used when making the request\n      method: \"post\",\n      // default\n      // `baseURL` will be prepended to `url` unless `url` is absolute.\n      baseURL: \"http://localhost:5000\",\n      // `headers` are custom headers to be sent\n      headers: {\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      },\n      // `data` is the data to be sent as the request body\n      data: {}\n    }).then(result => {\n      console.log(\"| 29 Debug |\" + JSON.stringify(result.data.result));\n      setFetchResult(result.data.result);\n      console.log(\"| 40 Debug |\" + JSON.stringify(FetchResult));\n    }).catch(error => {\n      console.log(\"| 47 Debug error |\" + JSON.stringify(error));\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, FetchResult && FetchResult.map(item => {\n    return React.createElement(React.Fragment, null, React.createElement(Cards, Object.assign({}, item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n  }));\n} // {\"file\":[\"1591199539871-postImageFileName.png\"],\n// \"react\":[],\n// \"comment\":[],\n// \"reference\":[],\n// \"_id\":\"5ed7c733b019802253410696\",\n// \"_user_id\":\"undefined\",\n// \"text\":\"asasasasas\",\n// \"date\":\"2020-06-03T15:52:19.901Z\",\n// \"__v\":0}","map":{"version":3,"sources":["/home/rupambumba/Documents/memebar/client/src/components/home/Feed.js"],"names":["React","useState","useEffect","useContext","Cards","axios","json","GrobalContex","Feed","FetchResult","setFetchResult","GlobalContexValue","setGlobalContexValue","console","log","url","method","baseURL","headers","data","then","result","JSON","stringify","catch","error","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAoCC,UAApC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,aAArB;AAEA,SAAQC,YAAR,QAA2B,4BAA3B;AAGA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AACA,QAAM,CAACU,iBAAD,EAAoBC,oBAApB,IAA4CT,UAAU,CAACI,YAAD,CAA5D;AACAL,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AAEAT,IAAAA,KAAK,CAAC;AACJ;AACAU,MAAAA,GAAG,EAAEJ,iBAFD;AAIJ;AACAK,MAAAA,MAAM,EAAE,MALJ;AAKY;AAEhB;AACAC,MAAAA,OAAO,EAAE,uBARL;AAUJ;AACAC,MAAAA,OAAO,EAAE;AAAE,4BAAoB;AAAtB,OAXL;AAaJ;AACAC,MAAAA,IAAI,EAAE;AAdF,KAAD,CAAL,CAgBGC,IAhBH,CAgBSC,MAAD,IAAY;AAChBR,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBQ,IAAI,CAACC,SAAL,CAAeF,MAAM,CAACF,IAAP,CAAYE,MAA3B,CAA7B;AAIAX,MAAAA,cAAc,CAACW,MAAM,CAACF,IAAP,CAAYE,MAAb,CAAd;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBQ,IAAI,CAACC,SAAL,CAAed,WAAf,CAA7B;AACD,KAvBH,EAwBGe,KAxBH,CAwBUC,KAAD,IAAW;AAChBZ,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBQ,IAAI,CAACC,SAAL,CAAeE,KAAf,CAAnC;AACD,KA1BH;AA2BD,GA9BQ,EA8BN,EA9BM,CAAT;AAgCA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGhB,WAAW,IACVA,WAAW,CAACiB,GAAZ,CAAiBC,IAAD,IAAU;AACxB,WACE,0CACE,oBAAC,KAAD,oBAAYA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD,GAND,CALJ,CADF;AAeD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect,useContext } from \"react\";\nimport Cards from \"./Cards\";\nimport axios from \"axios\";\nimport { json } from \"body-parser\";\n\nimport {GrobalContex} from \"../../context/GlobalContex\"\n\n\nexport default function Feed() {\n  const [FetchResult, setFetchResult] = useState();\n  const [GlobalContexValue, setGlobalContexValue] = useContext(GrobalContex)\n  useEffect(() => {\n    console.log(\"| 55 Debug |  use Effect reload\");\n\n    axios({\n      // `url` is the server URL that will be used for the request\n      url: GlobalContexValue,\n\n      // `method` is the request method to be used when making the request\n      method: \"post\", // default\n\n      // `baseURL` will be prepended to `url` unless `url` is absolute.\n      baseURL: \"http://localhost:5000\",\n\n      // `headers` are custom headers to be sent\n      headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n\n      // `data` is the data to be sent as the request body\n      data: {},\n    })\n      .then((result) => {\n        console.log(\"| 29 Debug |\" + JSON.stringify(result.data.result));\n\n   \n\n        setFetchResult(result.data.result);\n        console.log(\"| 40 Debug |\" + JSON.stringify(FetchResult));\n      })\n      .catch((error) => {\n        console.log(\"| 47 Debug error |\" + JSON.stringify(error));\n      });\n  }, []);\n\n  return (\n    <div>\n      {/* {JSON.stringify(FetchResult)} */}\n      {/* {typeof FetchResult} */}\n\n      {FetchResult &&\n        FetchResult.map((item) => {\n          return (\n            <>\n              <Cards  {...item} />\n            </>\n          );\n        })}\n    </div>\n  );\n}\n\n// {\"file\":[\"1591199539871-postImageFileName.png\"],\n// \"react\":[],\n// \"comment\":[],\n// \"reference\":[],\n// \"_id\":\"5ed7c733b019802253410696\",\n// \"_user_id\":\"undefined\",\n// \"text\":\"asasasasas\",\n// \"date\":\"2020-06-03T15:52:19.901Z\",\n// \"__v\":0}\n"]},"metadata":{},"sourceType":"module"}