{"ast":null,"code":"var _jsxFileName = \"/home/rupambumba/Documents/memebar/client/src/components/users/Singup.js\";\nimport React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: 400\n  }\n}));\nexport default function Singup() {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\",\n    showPassword: false\n  });\n\n  const handleChange = prop => event => {\n    // useState Handeling\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n    console.log(\"====>>>>\" + JSON.stringify(values));\n  };\n\n  const handleClickShowPassword = () => {\n    // password toggler\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    // password eye\n    event.preventDefault();\n  };\n\n  const handleFromSubmit = () => {\n    useEffect(() => {\n      axios.post(\"localhost:5000/api/user/singup\", {\n        firstname: values.firstname,\n        lastname: values.lastname,\n        email: values.email,\n        password: values.password\n      }).then().catch();\n    }, []);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Sing up\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(FormControl //First name\n  , {\n    fullWidth: true,\n    className: (clsx(classes.margin, classes.textField), classes.margin),\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-search\",\n    label: \"First name\",\n    type: \"search\",\n    variant: \"outlined\",\n    onChange: handleChange(\"firstname\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(FormControl //Last name\n  , {\n    fullWidth: true,\n    className: (clsx(classes.margin, classes.textField), classes.margin),\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-search\",\n    label: \"Last name\",\n    type: \"search\",\n    variant: \"outlined\",\n    onChange: handleChange(\"lastname\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(FormControl //email\"\n  , {\n    fullWidth: true,\n    className: (clsx(classes.margin, classes.textField), classes.margin),\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-search\",\n    label: \"email\",\n    type: \"email\",\n    variant: \"outlined\",\n    onChange: handleChange(\"email\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), React.createElement(FormControl // password\n  , {\n    fullWidth: true,\n    className: (clsx(classes.margin, classes.textField), classes.margin),\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"outlined-adornment-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Password\"), React.createElement(OutlinedInput, {\n    id: \"outlined-adornment-password\",\n    type: values.showPassword ? \"text\" : \"password\",\n    value: values.password,\n    onChange: handleChange(\"password\"),\n    endAdornment: React.createElement(InputAdornment, {\n      position: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPassword,\n      onMouseDown: handleMouseDownPassword,\n      edge: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, values.showPassword ? React.createElement(Visibility, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }) : React.createElement(VisibilityOff, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }))),\n    labelWidth: 70,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/home/rupambumba/Documents/memebar/client/src/components/users/Singup.js"],"names":["React","useState","useEffect","clsx","makeStyles","IconButton","Input","FilledInput","OutlinedInput","InputLabel","InputAdornment","FormHelperText","FormControl","TextField","Visibility","VisibilityOff","axios","useStyles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","width","Singup","classes","values","setValues","firstname","lastname","email","password","showPassword","handleChange","prop","event","target","value","console","log","JSON","stringify","handleClickShowPassword","handleMouseDownPassword","preventDefault","handleFromSubmit","post","then","catch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: 400\n  }\n}));\n\nexport default function Singup() {\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\",\n    showPassword: false\n  });\n\n  const handleChange = prop => event => {\n    // useState Handeling\n    setValues({ ...values, [prop]: event.target.value });\n    console.log(\"====>>>>\" + JSON.stringify(values));\n  };\n\n  const handleClickShowPassword = () => {\n    // password toggler\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = event => {\n    // password eye\n    event.preventDefault();\n  };\n\n  const handleFromSubmit = () =>{\n    useEffect(() => {\n      axios\n        .post(\"localhost:5000/api/user/singup\", {\n          firstname: values.firstname,\n          lastname: values.lastname,\n          email: values.email,\n          password: values.password\n        })\n        .then()\n        .catch();\n    }, []);\n  }\n\n\n\n  return (\n    <div className={classes.root}>\n      <h2>Sing up</h2>\n      <div>\n        <form >\n          <FormControl //First name\n            fullWidth\n            className={\n              (clsx(classes.margin, classes.textField), classes.margin)\n            }\n            variant=\"outlined\"\n          >\n            <TextField\n              id=\"outlined-search\"\n              label=\"First name\"\n              type=\"search\"\n              variant=\"outlined\"\n              onChange={handleChange(\"firstname\")}\n            />\n          </FormControl>\n\n          <FormControl //Last name\n            fullWidth\n            className={\n              (clsx(classes.margin, classes.textField), classes.margin)\n            }\n            variant=\"outlined\"\n          >\n            <TextField\n              id=\"outlined-search\"\n              label=\"Last name\"\n              type=\"search\"\n              variant=\"outlined\"\n              onChange={handleChange(\"lastname\")}\n            />\n          </FormControl>\n\n          <FormControl //email\"\n            fullWidth\n            className={\n              (clsx(classes.margin, classes.textField), classes.margin)\n            }\n            variant=\"outlined\"\n          >\n            <TextField\n              id=\"outlined-search\"\n              label=\"email\"\n              type=\"email\"\n              variant=\"outlined\"\n              onChange={handleChange(\"email\")}\n            />\n          </FormControl>\n\n          <FormControl // password\n            fullWidth\n            className={\n              (clsx(classes.margin, classes.textField), classes.margin)\n            }\n            variant=\"outlined\"\n          >\n            <InputLabel htmlFor=\"outlined-adornment-password\">\n              Password\n            </InputLabel>\n            <OutlinedInput\n              id=\"outlined-adornment-password\"\n              type={values.showPassword ? \"text\" : \"password\"}\n              value={values.password}\n              onChange={handleChange(\"password\")}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                    edge=\"end\"\n                  >\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n              labelWidth={70}\n            />\n          </FormControl>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}